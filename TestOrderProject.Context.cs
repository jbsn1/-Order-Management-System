//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestOrderProject
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblItem> tblItems { get; set; }
        public virtual DbSet<tblOrder> tblOrders { get; set; }
        public virtual DbSet<OrderItem> OrderItems { get; set; }
        public virtual DbSet<tbluser> tblusers { get; set; }
        public virtual DbSet<MailNotification> MailNotifications { get; set; }
    
        public virtual int AddUser_Proc(string userCode, Nullable<int> userTypeId, string userName, ObjectParameter result)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUser_Proc", userCodeParameter, userTypeIdParameter, userNameParameter, result);
        }
    
        public virtual int DeleteData(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteData", idParameter);
        }
    
        public virtual int deleteemp(Nullable<int> id, string code, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteemp", idParameter, codeParameter, nameParameter);
        }
    
        public virtual int deleteFromTbluser(string usercode)
        {
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteFromTbluser", usercodeParameter);
        }
    
        public virtual int deleteuser(string usercode)
        {
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteuser", usercodeParameter);
        }
    
        public virtual int delUserCodeNotExist()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delUserCodeNotExist");
        }
    
        public virtual int GetUsersList_Proc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUsersList_Proc");
        }
    
        public virtual int GetUsersList_Procs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUsersList_Procs");
        }
    
        public virtual int GopiRaju_22_08_2019(string orderNumber, string userCode, string customerCode, Nullable<System.DateTime> orderDate, Nullable<int> amount, string dML)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            var dMLParameter = dML != null ?
                new ObjectParameter("DML", dML) :
                new ObjectParameter("DML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GopiRaju_22_08_2019", orderNumberParameter, userCodeParameter, customerCodeParameter, orderDateParameter, amountParameter, dMLParameter);
        }
    
        public virtual int GopiRaju_22_8_2019(string orderNumber, string userCode, string customerCode, Nullable<System.DateTime> orderDate, Nullable<int> amount, string dML)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            var dMLParameter = dML != null ?
                new ObjectParameter("DML", dML) :
                new ObjectParameter("DML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GopiRaju_22_8_2019", orderNumberParameter, userCodeParameter, customerCodeParameter, orderDateParameter, amountParameter, dMLParameter);
        }
    
        public virtual int inertpro(Nullable<int> id, string name, string usertypecode, string code)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var usertypecodeParameter = usertypecode != null ?
                new ObjectParameter("usertypecode", usertypecode) :
                new ObjectParameter("usertypecode", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inertpro", idParameter, nameParameter, usertypecodeParameter, codeParameter);
        }
    
        public virtual int insert_tblSalesOrder(Nullable<int> orderNumber, string userCode, string customerCode, Nullable<System.DateTime> orderDate, Nullable<decimal> amount, Nullable<int> orderId, Nullable<int> userId)
        {
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_tblSalesOrder", orderNumberParameter, userCodeParameter, customerCodeParameter, orderDateParameter, amountParameter, orderIdParameter, userIdParameter);
        }
    
        public virtual int Insert_update_tbleSalesOrderR(string orderNumber, string userCode, string customerCode, string orderDate, string amount)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate != null ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_update_tbleSalesOrderR", orderNumberParameter, userCodeParameter, customerCodeParameter, orderDateParameter, amountParameter);
        }
    
        public virtual int InsertAndUpdate_Proc(Nullable<int> userID, string userCode, string userName, string userTypeID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userTypeIDParameter = userTypeID != null ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAndUpdate_Proc", userIDParameter, userCodeParameter, userNameParameter, userTypeIDParameter);
        }
    
        public virtual int InsertAndUpdateUser(Nullable<int> userID, string userCode, string userTypeCode, string userName)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var userTypeCodeParameter = userTypeCode != null ?
                new ObjectParameter("UserTypeCode", userTypeCode) :
                new ObjectParameter("UserTypeCode", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAndUpdateUser", userIDParameter, userCodeParameter, userTypeCodeParameter, userNameParameter);
        }
    
        public virtual int insertDataIntosalesOrder(string orderNumber, string userCode, string customerCode, Nullable<System.DateTime> orderDate)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("userCode", userCode) :
                new ObjectParameter("userCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("customerCode", customerCode) :
                new ObjectParameter("customerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("orderDate", orderDate) :
                new ObjectParameter("orderDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertDataIntosalesOrder", orderNumberParameter, userCodeParameter, customerCodeParameter, orderDateParameter);
        }
    
        public virtual int insertemp(string code, string name, string usertypecode)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var usertypecodeParameter = usertypecode != null ?
                new ObjectParameter("usertypecode", usertypecode) :
                new ObjectParameter("usertypecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertemp", codeParameter, nameParameter, usertypecodeParameter);
        }
    
        public virtual int InsertintoUser(string usercode, string name, string usertype)
        {
            var usercodeParameter = usercode != null ?
                new ObjectParameter("Usercode", usercode) :
                new ObjectParameter("Usercode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertintoUser", usercodeParameter, nameParameter, usertypeParameter);
        }
    
        public virtual int InsertSales(string orderNumber, string userCode, string customerCode, Nullable<System.DateTime> orderDate, Nullable<int> amount)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertSales", orderNumberParameter, userCodeParameter, customerCodeParameter, orderDateParameter, amountParameter);
        }
    
        public virtual int insertUpdatesalesOrder(string orderNumber, string userCode, string customerCode, Nullable<int> amount)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("userCode", userCode) :
                new ObjectParameter("userCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("customerCode", customerCode) :
                new ObjectParameter("customerCode", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertUpdatesalesOrder", orderNumberParameter, userCodeParameter, customerCodeParameter, amountParameter);
        }
    
        public virtual int PA1(string oRDERNUMBER, string uSERCODE, string cUSTOMERCODE, string oRDERDATE, Nullable<int> aMOUNT)
        {
            var oRDERNUMBERParameter = oRDERNUMBER != null ?
                new ObjectParameter("ORDERNUMBER", oRDERNUMBER) :
                new ObjectParameter("ORDERNUMBER", typeof(string));
    
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            var cUSTOMERCODEParameter = cUSTOMERCODE != null ?
                new ObjectParameter("CUSTOMERCODE", cUSTOMERCODE) :
                new ObjectParameter("CUSTOMERCODE", typeof(string));
    
            var oRDERDATEParameter = oRDERDATE != null ?
                new ObjectParameter("ORDERDATE", oRDERDATE) :
                new ObjectParameter("ORDERDATE", typeof(string));
    
            var aMOUNTParameter = aMOUNT.HasValue ?
                new ObjectParameter("AMOUNT", aMOUNT) :
                new ObjectParameter("AMOUNT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA1", oRDERNUMBERParameter, uSERCODEParameter, cUSTOMERCODEParameter, oRDERDATEParameter, aMOUNTParameter);
        }
    
        public virtual int PA2(string oRDERNUMBER)
        {
            var oRDERNUMBERParameter = oRDERNUMBER != null ?
                new ObjectParameter("ORDERNUMBER", oRDERNUMBER) :
                new ObjectParameter("ORDERNUMBER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA2", oRDERNUMBERParameter);
        }
    
        public virtual int PR_GET_TBLUSERSALE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_GET_TBLUSERSALE");
        }
    
        public virtual int PR_GET_TBLUSERSALEORDER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_GET_TBLUSERSALEORDER");
        }
    
        public virtual int PR_INS_UPD_TBLSALESORDER(string iP_OrderNumber, string iP_UserCode, string iP_CustomerCode, Nullable<System.DateTime> iP_OrderDate, Nullable<int> iP_Amount, string iP_FLAG)
        {
            var iP_OrderNumberParameter = iP_OrderNumber != null ?
                new ObjectParameter("IP_OrderNumber", iP_OrderNumber) :
                new ObjectParameter("IP_OrderNumber", typeof(string));
    
            var iP_UserCodeParameter = iP_UserCode != null ?
                new ObjectParameter("IP_UserCode", iP_UserCode) :
                new ObjectParameter("IP_UserCode", typeof(string));
    
            var iP_CustomerCodeParameter = iP_CustomerCode != null ?
                new ObjectParameter("IP_CustomerCode", iP_CustomerCode) :
                new ObjectParameter("IP_CustomerCode", typeof(string));
    
            var iP_OrderDateParameter = iP_OrderDate.HasValue ?
                new ObjectParameter("IP_OrderDate", iP_OrderDate) :
                new ObjectParameter("IP_OrderDate", typeof(System.DateTime));
    
            var iP_AmountParameter = iP_Amount.HasValue ?
                new ObjectParameter("IP_Amount", iP_Amount) :
                new ObjectParameter("IP_Amount", typeof(int));
    
            var iP_FLAGParameter = iP_FLAG != null ?
                new ObjectParameter("IP_FLAG", iP_FLAG) :
                new ObjectParameter("IP_FLAG", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_INS_UPD_TBLSALESORDER", iP_OrderNumberParameter, iP_UserCodeParameter, iP_CustomerCodeParameter, iP_OrderDateParameter, iP_AmountParameter, iP_FLAGParameter);
        }
    
        public virtual int proc_employeesdetails(string employee_Name)
        {
            var employee_NameParameter = employee_Name != null ?
                new ObjectParameter("employee_Name", employee_Name) :
                new ObjectParameter("employee_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_employeesdetails", employee_NameParameter);
        }
    
        public virtual int proinsert(Nullable<int> iduser, string usercode, string username, string usertypecode, Nullable<int> idtype, string nameype)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var usertypecodeParameter = usertypecode != null ?
                new ObjectParameter("usertypecode", usertypecode) :
                new ObjectParameter("usertypecode", typeof(string));
    
            var idtypeParameter = idtype.HasValue ?
                new ObjectParameter("idtype", idtype) :
                new ObjectParameter("idtype", typeof(int));
    
            var nameypeParameter = nameype != null ?
                new ObjectParameter("nameype", nameype) :
                new ObjectParameter("nameype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proinsert", iduserParameter, usercodeParameter, usernameParameter, usertypecodeParameter, idtypeParameter, nameypeParameter);
        }
    
        public virtual int proinsert1(Nullable<int> iduser, string usercode, string username, string usertypecode, Nullable<int> idtype, string nameype, string typecode)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var usertypecodeParameter = usertypecode != null ?
                new ObjectParameter("usertypecode", usertypecode) :
                new ObjectParameter("usertypecode", typeof(string));
    
            var idtypeParameter = idtype.HasValue ?
                new ObjectParameter("idtype", idtype) :
                new ObjectParameter("idtype", typeof(int));
    
            var nameypeParameter = nameype != null ?
                new ObjectParameter("nameype", nameype) :
                new ObjectParameter("nameype", typeof(string));
    
            var typecodeParameter = typecode != null ?
                new ObjectParameter("typecode", typecode) :
                new ObjectParameter("typecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proinsert1", iduserParameter, usercodeParameter, usernameParameter, usertypecodeParameter, idtypeParameter, nameypeParameter, typecodeParameter);
        }
    
        public virtual int proinsert3(string usercode, string username, string usertypecode)
        {
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var usertypecodeParameter = usertypecode != null ?
                new ObjectParameter("usertypecode", usertypecode) :
                new ObjectParameter("usertypecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proinsert3", usercodeParameter, usernameParameter, usertypecodeParameter);
        }
    
        public virtual int samplegridview()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("samplegridview");
        }
    
        public virtual int SearchUser_Proc(string userCode, Nullable<int> userTypeId, string userName)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchUser_Proc", userCodeParameter, userTypeIdParameter, userNameParameter);
        }
    
        public virtual int SearchUsers_Proc(string userCode)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchUsers_Proc", userCodeParameter);
        }
    
        public virtual ObjectResult<selectorders_Result> selectorders(string usercode)
        {
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectorders_Result>("selectorders", usercodeParameter);
        }
    
        public virtual int selectpro()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("selectpro");
        }
    
        public virtual int sp_adduser(string usercode, string username, string usertype)
        {
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_adduser", usercodeParameter, usernameParameter, usertypeParameter);
        }
    
        public virtual int sp_ddl()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ddl");
        }
    
        public virtual int sp_delete2(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete2", idParameter);
        }
    
        public virtual int Sp_DeleteUserById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteUserById", idParameter);
        }
    
        public virtual int sp_DeleteUsers_mpr()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteUsers_mpr");
        }
    
        public virtual int sp_details(string uSerCode)
        {
            var uSerCodeParameter = uSerCode != null ?
                new ObjectParameter("USerCode", uSerCode) :
                new ObjectParameter("USerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_details", uSerCodeParameter);
        }
    
        public virtual int sp_displayall(string code, string usertype, string name)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_displayall", codeParameter, usertypeParameter, nameParameter);
        }
    
        public virtual int sp_displaytbluser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_displaytbluser");
        }
    
        public virtual int sp_displaytbluser99()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_displaytbluser99");
        }
    
        public virtual int SP_EMPLYEE_TEST(string eMPLOYEE_NAME)
        {
            var eMPLOYEE_NAMEParameter = eMPLOYEE_NAME != null ?
                new ObjectParameter("EMPLOYEE_NAME", eMPLOYEE_NAME) :
                new ObjectParameter("EMPLOYEE_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EMPLYEE_TEST", eMPLOYEE_NAMEParameter);
        }
    
        public virtual int sp_getall()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getall");
        }
    
        public virtual int Sp_GetAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_GetAllUsers");
        }
    
        public virtual int sp_getdata(Nullable<int> id, string userCode, string name, string userType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getdata", idParameter, userCodeParameter, nameParameter, userTypeParameter);
        }
    
        public virtual int SP_GetSalesOrder()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetSalesOrder");
        }
    
        public virtual int Sp_GetUserById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_GetUserById", idParameter);
        }
    
        public virtual int Sp_GetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_GetUsers");
        }
    
        public virtual int Sp_GetUsersType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_GetUsersType");
        }
    
        public virtual int Sp_GetUserTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_GetUserTypes");
        }
    
        public virtual ObjectResult<sp_Gridfill_Result> sp_Gridfill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Gridfill_Result>("sp_Gridfill");
        }
    
        public virtual int sp_insert(string flag, string ucode, string name, string uType)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var ucodeParameter = ucode != null ?
                new ObjectParameter("ucode", ucode) :
                new ObjectParameter("ucode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var uTypeParameter = uType != null ?
                new ObjectParameter("UType", uType) :
                new ObjectParameter("UType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert", flagParameter, ucodeParameter, nameParameter, uTypeParameter);
        }
    
        public virtual int sp_insert1(string orderNumber, string usercode, string customerCode, Nullable<System.DateTime> orderDate, Nullable<decimal> aMount)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var aMountParameter = aMount.HasValue ?
                new ObjectParameter("AMount", aMount) :
                new ObjectParameter("AMount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert1", orderNumberParameter, usercodeParameter, customerCodeParameter, orderDateParameter, aMountParameter);
        }
    
        public virtual int sp_Insert2(string code, string name, string type)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insert2", codeParameter, nameParameter, typeParameter);
        }
    
        public virtual int sp_insertsales(string orderno, string usercode, string customercode, Nullable<System.DateTime> orderdate)
        {
            var ordernoParameter = orderno != null ?
                new ObjectParameter("orderno", orderno) :
                new ObjectParameter("orderno", typeof(string));
    
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var customercodeParameter = customercode != null ?
                new ObjectParameter("customercode", customercode) :
                new ObjectParameter("customercode", typeof(string));
    
            var orderdateParameter = orderdate.HasValue ?
                new ObjectParameter("orderdate", orderdate) :
                new ObjectParameter("orderdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertsales", ordernoParameter, usercodeParameter, customercodeParameter, orderdateParameter);
        }
    
        public virtual int sp_insertsales1(string orderno, string usercode, string customercode, Nullable<System.DateTime> orderdate)
        {
            var ordernoParameter = orderno != null ?
                new ObjectParameter("orderno", orderno) :
                new ObjectParameter("orderno", typeof(string));
    
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var customercodeParameter = customercode != null ?
                new ObjectParameter("customercode", customercode) :
                new ObjectParameter("customercode", typeof(string));
    
            var orderdateParameter = orderdate.HasValue ?
                new ObjectParameter("orderdate", orderdate) :
                new ObjectParameter("orderdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertsales1", ordernoParameter, usercodeParameter, customercodeParameter, orderdateParameter);
        }
    
        public virtual int sp_inserttable(string ordernumber, string usercode, string customercode, Nullable<System.DateTime> orderdate, Nullable<decimal> amount)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var customercodeParameter = customercode != null ?
                new ObjectParameter("customercode", customercode) :
                new ObjectParameter("customercode", typeof(string));
    
            var orderdateParameter = orderdate.HasValue ?
                new ObjectParameter("orderdate", orderdate) :
                new ObjectParameter("orderdate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_inserttable", ordernumberParameter, usercodeParameter, customercodeParameter, orderdateParameter, amountParameter);
        }
    
        public virtual int sp_InsertUpdateSaleOrdersdata(string typeOfOperation, string orderNumber, string userCode, string customerCode, Nullable<System.DateTime> orderDate, Nullable<decimal> amount)
        {
            var typeOfOperationParameter = typeOfOperation != null ?
                new ObjectParameter("typeOfOperation", typeOfOperation) :
                new ObjectParameter("typeOfOperation", typeof(string));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateSaleOrdersdata", typeOfOperationParameter, orderNumberParameter, userCodeParameter, customerCodeParameter, orderDateParameter, amountParameter);
        }
    
        public virtual int SP_InsertUpdateSalesOrder(string orderNo, string userCode, string customerCode, Nullable<System.DateTime> orderDate, Nullable<int> amount)
        {
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertUpdateSalesOrder", orderNoParameter, userCodeParameter, customerCodeParameter, orderDateParameter, amountParameter);
        }
    
        public virtual int sp_pushadduser(string usercode, string username, string usertype)
        {
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_pushadduser", usercodeParameter, usernameParameter, usertypeParameter);
        }
    
        public virtual int SP_SalesOrder(Nullable<int> saleodreid, string ordernumber, string usercode, string customercode, Nullable<System.DateTime> orderdate, string statementType)
        {
            var saleodreidParameter = saleodreid.HasValue ?
                new ObjectParameter("saleodreid", saleodreid) :
                new ObjectParameter("saleodreid", typeof(int));
    
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var customercodeParameter = customercode != null ?
                new ObjectParameter("customercode", customercode) :
                new ObjectParameter("customercode", typeof(string));
    
            var orderdateParameter = orderdate.HasValue ?
                new ObjectParameter("orderdate", orderdate) :
                new ObjectParameter("orderdate", typeof(System.DateTime));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesOrder", saleodreidParameter, ordernumberParameter, usercodeParameter, customercodeParameter, orderdateParameter, statementTypeParameter);
        }
    
        public virtual int sp_SalesOrder_mpr(string orderNum, string userCode, string customerCode, Nullable<System.DateTime> orderDate, Nullable<decimal> amount)
        {
            var orderNumParameter = orderNum != null ?
                new ObjectParameter("OrderNum", orderNum) :
                new ObjectParameter("OrderNum", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SalesOrder_mpr", orderNumParameter, userCodeParameter, customerCodeParameter, orderDateParameter, amountParameter);
        }
    
        public virtual int sp_Search(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Search", idParameter);
        }
    
        public virtual int sp_searchGridfill(string code, string name, string type)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_searchGridfill", codeParameter, nameParameter, typeParameter);
        }
    
        public virtual int sp_SearchR(string code, string name)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SearchR", codeParameter, nameParameter);
        }
    
        public virtual int Sp_SearchUserByCode(string userCode)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_SearchUserByCode", userCodeParameter);
        }
    
        public virtual int sp_SortedUsersList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SortedUsersList");
        }
    
        public virtual int SP_STUENDE_NAME(string student_name)
        {
            var student_nameParameter = student_name != null ?
                new ObjectParameter("student_name", student_name) :
                new ObjectParameter("student_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STUENDE_NAME", student_nameParameter);
        }
    
        public virtual int SP_STUENDE_NAMETWO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STUENDE_NAMETWO");
        }
    
        public virtual int SP_TOPPER(string rOW)
        {
            var rOWParameter = rOW != null ?
                new ObjectParameter("ROW", rOW) :
                new ObjectParameter("ROW", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TOPPER", rOWParameter);
        }
    
        public virtual int sp_Update1(string orderNumber, string usercode, string customerCode, Nullable<System.DateTime> orderDate, Nullable<decimal> aMount)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var aMountParameter = aMount.HasValue ?
                new ObjectParameter("AMount", aMount) :
                new ObjectParameter("AMount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update1", orderNumberParameter, usercodeParameter, customerCodeParameter, orderDateParameter, aMountParameter);
        }
    
        public virtual int sp_update2(string code, string name, string type, Nullable<int> id)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update2", codeParameter, nameParameter, typeParameter, idParameter);
        }
    
        public virtual int sp_updatesales1(string orderno, string usercode, string customercode, Nullable<System.DateTime> orderdate, string amount)
        {
            var ordernoParameter = orderno != null ?
                new ObjectParameter("orderno", orderno) :
                new ObjectParameter("orderno", typeof(string));
    
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var customercodeParameter = customercode != null ?
                new ObjectParameter("customercode", customercode) :
                new ObjectParameter("customercode", typeof(string));
    
            var orderdateParameter = orderdate.HasValue ?
                new ObjectParameter("orderdate", orderdate) :
                new ObjectParameter("orderdate", typeof(System.DateTime));
    
            var amountParameter = amount != null ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updatesales1", ordernoParameter, usercodeParameter, customercodeParameter, orderdateParameter, amountParameter);
        }
    
        public virtual int sp_updateuser(string usercode, string username, string usertype, Nullable<int> id)
        {
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateuser", usercodeParameter, usernameParameter, usertypeParameter, idParameter);
        }
    
        public virtual int Sp_UpdateUserById(Nullable<int> id, string userCode, string name, Nullable<int> userTypeId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdateUserById", idParameter, userCodeParameter, nameParameter, userTypeIdParameter);
        }
    
        public virtual int sp_UserDelete(string name, string code, string userTypeCode, Nullable<int> id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var userTypeCodeParameter = userTypeCode != null ?
                new ObjectParameter("UserTypeCode", userTypeCode) :
                new ObjectParameter("UserTypeCode", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserDelete", nameParameter, codeParameter, userTypeCodeParameter, idParameter);
        }
    
        public virtual int sp_useredit(string name, string code, string userTypeCode, Nullable<int> id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var userTypeCodeParameter = userTypeCode != null ?
                new ObjectParameter("UserTypeCode", userTypeCode) :
                new ObjectParameter("UserTypeCode", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_useredit", nameParameter, codeParameter, userTypeCodeParameter, idParameter);
        }
    
        public virtual int sp_UsersList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UsersList");
        }
    
        public virtual int spDeletetbluser(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeletetbluser", idParameter);
        }
    
        public virtual int spDeletetblusertype(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeletetblusertype", idParameter);
        }
    
        public virtual int spGettbluser(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGettbluser", idParameter);
        }
    
        public virtual int spGettblusertype(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGettblusertype", idParameter);
        }
    
        public virtual int spInserttbluser(string code, string usertypecode, string name)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var usertypecodeParameter = usertypecode != null ?
                new ObjectParameter("usertypecode", usertypecode) :
                new ObjectParameter("usertypecode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInserttbluser", codeParameter, usertypecodeParameter, nameParameter);
        }
    
        public virtual int spInserttblusertype(string code, string name)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInserttblusertype", codeParameter, nameParameter);
        }
    
        public virtual int spInsertUpdateSaleOrders(string typeOfOperation, string orderNumber, string userCode, string customerCode, Nullable<System.DateTime> orderDate, Nullable<decimal> amount)
        {
            var typeOfOperationParameter = typeOfOperation != null ?
                new ObjectParameter("typeOfOperation", typeOfOperation) :
                new ObjectParameter("typeOfOperation", typeof(string));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertUpdateSaleOrders", typeOfOperationParameter, orderNumberParameter, userCodeParameter, customerCodeParameter, orderDateParameter, amountParameter);
        }
    
        public virtual int spUpdatetbluser(Nullable<int> id, string code, string usertypecode, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var usertypecodeParameter = usertypecode != null ?
                new ObjectParameter("usertypecode", usertypecode) :
                new ObjectParameter("usertypecode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdatetbluser", idParameter, codeParameter, usertypecodeParameter, nameParameter);
        }
    
        public virtual int spUpdatetblusertype(Nullable<int> id, string code, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdatetblusertype", idParameter, codeParameter, nameParameter);
        }
    
        public virtual int tblSalesOrder1_Test(string orderNumber, string userCode, string customerCode, Nullable<System.DateTime> orderDate)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblSalesOrder1_Test", orderNumberParameter, userCodeParameter, customerCodeParameter, orderDateParameter);
        }
    
        public virtual int tblsalesorders1(string ordernumber, string usercode, string customercode, ObjectParameter orderdate)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var customercodeParameter = customercode != null ?
                new ObjectParameter("customercode", customercode) :
                new ObjectParameter("customercode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblsalesorders1", ordernumberParameter, usercodeParameter, customercodeParameter, orderdate);
        }
    
        public virtual int update_tblSalesOrder(Nullable<int> orderNumber, string userCode, string customerCode, Nullable<System.DateTime> orderDate, Nullable<decimal> amount, Nullable<int> orderId, Nullable<int> userId)
        {
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_tblSalesOrder", orderNumberParameter, userCodeParameter, customerCodeParameter, orderDateParameter, amountParameter, orderIdParameter, userIdParameter);
        }
    
        public virtual int updateDataIntosalesOrder(string orderNumber, string userCode, string customerCode, Nullable<System.DateTime> orderDate, Nullable<int> amount)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("userCode", userCode) :
                new ObjectParameter("userCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("customerCode", customerCode) :
                new ObjectParameter("customerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("orderDate", orderDate) :
                new ObjectParameter("orderDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateDataIntosalesOrder", orderNumberParameter, userCodeParameter, customerCodeParameter, orderDateParameter, amountParameter);
        }
    
        public virtual int updateemp(Nullable<int> id, string code, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateemp", idParameter, codeParameter, nameParameter);
        }
    
        public virtual int UpdateUser_Proc(string userCode, Nullable<int> userTypeId, string userName, ObjectParameter result)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser_Proc", userCodeParameter, userTypeIdParameter, userNameParameter, result);
        }
    
        public virtual int user_add(string id, string code, string name)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("user_add", idParameter, codeParameter, nameParameter);
        }
    
        public virtual int User_AddUpdate(Nullable<int> userID, string userCode, string userName, Nullable<int> userTypeID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("User_AddUpdate", userIDParameter, userCodeParameter, userNameParameter, userTypeIDParameter);
        }
    
        public virtual int User_CRUD(string action, Nullable<int> id, string code, string userTypeCode, string name)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var userTypeCodeParameter = userTypeCode != null ?
                new ObjectParameter("UserTypeCode", userTypeCode) :
                new ObjectParameter("UserTypeCode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("User_CRUD", actionParameter, idParameter, codeParameter, userTypeCodeParameter, nameParameter);
        }
    
        public virtual int user_delete(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("user_delete", idParameter);
        }
    
        public virtual int User_Get(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("User_Get", userIDParameter);
        }
    
        public virtual int User_List(string userCode, string userName, Nullable<int> userTypeID)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("User_List", userCodeParameter, userNameParameter, userTypeIDParameter);
        }
    
        public virtual int User_Remove(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("User_Remove", userIDParameter);
        }
    
        public virtual int user_upade(string id, string code, string name)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("user_upade", idParameter, codeParameter, nameParameter);
        }
    
        public virtual ObjectResult<user_view_Result> user_view()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<user_view_Result>("user_view");
        }
    
        public virtual ObjectResult<string> userCodeNotExist()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("userCodeNotExist");
        }
    
        public virtual int UserType_List(Nullable<int> userTypeID)
        {
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserType_List", userTypeIDParameter);
        }
    
        public virtual int Usp_deletetUser(string code)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_deletetUser", codeParameter);
        }
    
        public virtual int USP_GETDETAILS(string nAME)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GETDETAILS", nAMEParameter);
        }
    
        public virtual int USP_insertUpdateUserDetails(string userCode, string name, string userType)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_insertUpdateUserDetails", userCodeParameter, nameParameter, userTypeParameter);
        }
    
        public virtual int Usp_InsertUser(string code, string name, string userType, ObjectParameter retmsg)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_InsertUser", codeParameter, nameParameter, userTypeParameter, retmsg);
        }
    
        public virtual int usp_SalesOrder(string orderNumber, string userCode, string customerCode, Nullable<System.DateTime> orderDate, Nullable<decimal> amount, Nullable<int> orderId, Nullable<int> userID)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SalesOrder", orderNumberParameter, userCodeParameter, customerCodeParameter, orderDateParameter, amountParameter, orderIdParameter, userIDParameter);
        }
    
        public virtual int Usp_UpdatetUser(string code, string name, string userType)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UpdatetUser", codeParameter, nameParameter, userTypeParameter);
        }
    
        public virtual int UspBindGrid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspBindGrid");
        }
    
        public virtual int Viewby_id(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Viewby_id", idParameter);
        }
    }
}
